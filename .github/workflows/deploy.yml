name: builds and deploys demo website
on: 
  push:
    tags:
      - '*'
jobs:
  build:
    runs-on: ubuntu-latest
    services:
        node:
          image: shukriadams/node12build:0.0.2
    steps:
      - uses: actions/checkout@v1
      - name: builds and copies static assets to remote Nginx folder
        run: | 
            cd src/build && sh ./writeHash.sh && cd -
            docker run -v $(pwd):/tmp/bootstrip shukriadams/node12build:0.0.2 sh -c "cd /tmp/bootstrip/src && yarn && npm run build"
            docker run -e $HOST -e $USERNAME -e $PASSWORD -v $(pwd):/tmp/bootstrip shukriadams/node12build:0.0.2 sh -c "cd /tmp/bootstrip/src/web && rsync --recursive --ignore-times --times --compress --delete --progress --rsh="\""sshpass -p ${PASSWORD} ssh -o StrictHostKeyChecking=no -l ${USERNAME}"\"" ./*  ${USERNAME}@${HOST}:/srv/bootstrip/"
            curl -X POST "https://api.cloudflare.com/client/v4/zones/023e105f4ecef8ad9ca31a8372d0c353/purge_cache" \
                -H "X-Auth-Email: ${CLOUDFLARE_EMAIL}" \
                -H "X-Auth-Key: ${CLOUDFLARE_KEY}" \
                -H "Content-Type: application/json" \
                --data '{"purge_everything":true}'
        env:
            HOST: ${{ secrets.HOST }}
            USERNAME: ${{ secrets.USERNAME }}
            PASSWORD: ${{ secrets.PASSWORD }}
            CLOUDFLARE_EMAIL: ${{ secrets.CLOUDFLARE_EMAIL }} 
            CLOUDFLARE_KEY: ${{ secrets.CLOUDFLARE_KEY }}             