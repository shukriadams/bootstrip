@mixin columnBase {
    display: grid;
    column-gap: var(--layout-universalMargin);
}

/* max-width area for page-level structure. Do not give this padding, it's for scaffolding only */
.dashiLayout-clamp {
    display: block;
    width: 100%;
    margin-left: auto;
    margin-right: auto;
    max-width: var(--pageClampWidth);
}

// sections are to divide a page up into blocks
.dashiLayout-section {
    padding: var(--layout-universalMargin);
    display: block;
}

// divides layout into 1 column. First block child will become cells, divs work fine for this
.dashiLayout-column {
    @include columnBase;
}

// divides layout into 2 column. First block child will become cells, divs work fine for this
.dashiLayout-columns2 {
    @include columnBase;
    grid-template-columns: 1fr 1fr;
}

// divides layout into 4 column. First block child will become cells, divs work fine for this
.dashiLayout-columns4 {
    @include columnBase;
    grid-template-columns: 1fr 1fr 1fr 1fr;
}

// can contain text, images or anything which requires padding around it so as not to colide with adjacent layout sections-
// use this as first level children in columns for exxample
.dashiLayout-content {
    display: block;
    margin-bottom: 1rem;
}

clamp {
    @extend .dashiLayout-clamp;
}

section {
    @extend .dashiLayout-section;
}

// cell, but with visual opinions
content {
    @extend .dashiLayout-content;
}

column {
    @extend .dashiLayout-column;
}

columns2 {
    @extend .dashiLayout-columns2;
}

columns4 {
    @extend .dashiLayout-columns4;
}
